From 9c174af88ed90acbb1343354a6b7af43b8466633 Mon Sep 17 00:00:00 2001
From: Olaf Schulz <olaf_schulz@posteo.de>
Date: Mon, 8 Nov 2021 17:17:07 +0100
Subject: [PATCH] Add --no-libintl option to otemplate tool

In Bionic/Android environments is libintl not included.
This commit adds the option to avoid the dependency to libintl.

This disables the functionality of 'gettext'. If this is needed you
need to compile libintl with your Android SDK.
---
 CMakeLists.txt              |  2 +-
 src/onion/CMakeLists.txt    |  4 ++--
 tools/otemplate/otemplate.c | 14 ++++++++++++--
 3 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 40a7ac5..2688b2f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,7 +16,7 @@ SET(ONION_USE_GC true CACHE BOOL "Compile Boehm GC examples")
 SET(ONION_USE_TESTS true CACHE BOOL "Compile the tests")
 SET(ONION_EXAMPLES true CACHE BOOL "Compile the examples")
 SET(ONION_USE_BINDINGS_CPP true CACHE BOOL "Compile the CPP bindings")
-SET(ONION_POLLER default CACHE string "Default poller to use: default | epoll | libev | libevent")
+SET(ONION_POLLER default CACHE STRING "Default poller to use: default | epoll | libev | libevent")
 SET(TERMUX false CACHE BOOL "Compiling on Android/Boinc")
 ########
 
diff --git a/src/onion/CMakeLists.txt b/src/onion/CMakeLists.txt
index 4a8a271..2f14c41 100644
--- a/src/onion/CMakeLists.txt
+++ b/src/onion/CMakeLists.txt
@@ -13,9 +13,9 @@ set(SOURCES onion.c codecs.c dict.c low.c request.c response.c handler.c log.c s
 	)
 
 set(LIBRARIES)
-if (NOT ${TERMUX})
+if (NOT TERMUX)
 	LIST(APPEND LIBRARIES rt)
-endif (NOT ${TERMUX})
+endif (NOT TERMUX)
 
 ## optional add sources and libraries depeding on features
 
diff --git a/tools/otemplate/otemplate.c b/tools/otemplate/otemplate.c
index 6a7c8e4..96d06f8 100644
--- a/tools/otemplate/otemplate.c
+++ b/tools/otemplate/otemplate.c
@@ -39,6 +39,7 @@
 #include "../common/updateassets.h"
 
 list *plugin_search_path;
+int with_libintl = 1;
 
 int work(const char *infilename, const char *outfilename,
          onion_assets_file * assets);
@@ -82,6 +83,9 @@ int main(int argc, char **argv) {
       }
       assetfilename = argv[i];
       ONION_DEBUG("Assets file: %s", assetfilename);
+    } else if ((strcmp(argv[i], "--no-libintl") == 0)) {
+      ONION_DEBUG("Disable libintl dependency (gettext)");
+      with_libintl = 0;
     } else {
       if (infilename) {
         if (outfilename) {
@@ -150,6 +154,7 @@ void help(const char *msg) {
           "\n" "  --help                      Shows this help\n"
           "  --templatetagsdir|-t <dirname>  Adds that templatedir to known templatedirs. May be called several times.\n"
           "  --no-orig-lines|-n          Do not set the original lines on the generated .c file. With this off the \n"
+          "  --no-libintl                Disable internationalization by gettext. Useful on Bionic without libintl lib.\n"
           "                              error reporting refers to the C file, not the template.\n"
           "  --asset-file|-a             Write function definitions to an asset file. Defaults to assets.h\n"
           "  <infilename>                Input filename or '-' to use stdin.\n"
@@ -229,8 +234,13 @@ int work(const char *infilename, const char *outfilename,
 
   fprintf(status.out,
           "/** Autogenerated by otemplate v. 0.2.1 */\n"
-          "\n"
-          "#include <libintl.h>\n"
+          "\n");
+  if (with_libintl) {
+      fprintf(status.out, "#include <libintl.h>\n");
+  }else{
+      fprintf(status.out, "#define dgettext(DICT, KEY) (KEY)\n");
+  }
+  fprintf(status.out,
           "#include <string.h>\n\n"
           "#include <onion/onion.h>\n"
           "#include <onion/dict.h>\n"
-- 
2.25.1

