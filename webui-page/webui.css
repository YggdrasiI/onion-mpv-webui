:root {
  --main-bg-color: #000000;
  --main-fg-color: #a0a0a0;

  --playlist-bg-hover: #333333;
  --playlist-bg-active: #9135bc; /* violet */

  --touchmenu-bg-red: rgba(150, 0, 0, 0.85);
  --touchmenu-bg-blue: rgba(90, 90, 240, 0.5);
  --touchmenu-bg-yellow: rgba(204, 171, 41, 0.47);
  --touchmenu-bg: rgb(66, 4, 83);
}

body {
  font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
  max-width: 100%;
  background-color: #000000;
  color: var(--main-fg-color);
  margin: 0px;
  padding: 0px;

  /*overflow:auto;*/
  overflow:clip; /* Sometimes touchmenu.js menus producing vertical scrollbar in Chromium. */
}

h1, h2, h3 {
  word-wrap: break-word;
  display:inline-block;
}

h1 {
  font-size: 5vmin;
  margin-bottom: 2px;
}

#title {
  max-height:3.5em;
  /*overflow:hidden;*/ /* cuts text lines */
  /*height:inherit;*/
}

h1 span.error {
  background-color: red;
  color: #000000;
  padding: 5px;
}

h1 span.info {
  background-color: rgba(100, 30, 30, 0.3);
  padding: 5px;
}

h2 {
  font-size: 4vmin;
  margin-top: 2px;
  margin-bottom: 2px;
}

h3 {
  font-size: 4vmin;
  margin-top: 2px;
}

.burger {
  position:absolute;
  right:3vmin;
  top:3vmin;
  font-size: 5vmin;
  z-index:100;
}

.burger div {
  cursor: pointer;
  color: var(--main-fg-color);
}

.hidden {
  display: none !important;
}

.invisible {
  visibility: hidden !important;
}

.button {
  overflow:clip;
  user-select:none; /* Avoids text selection on long button press */
}

.button:hover {
  /*filter: brightness(50%);*/
}

.button:active {
  /*filter: brightness(30%);*/
}

.button .content, .button .content i{
  /*font-size: min(4.5vw, 150%);*/
}

.icon-content {
  padding-left:0.2em;
  padding-right:0.2em;
}

.button .icon-content i{
  font-size: 4.5vh;
}

.button .text-content {
  /*font-size: 2.5vw;*/ /* On slim screens too different from icon-content buttons. Using 60% on slim screens, now. */
  font-weight: bold;
}

.green {
  background-color: #6f6;
}

.blue {
  background-color: #66f;
}

.gray {
  background-color: #999;
}

.red {
  background-color: #b53636;
}

.yellow {
  background-color: #d7b52f;
}

.violet {
  background-color: #9135bc;
}

.full-width {
  width: 100%;
}

.right {
  float: right;
}

.left {
  float: left;
}

.button label {
  /* Otherwise in FF hand cursor switches back to text selection*/
  /*  cursor: inherit;  */
  /* or */
  pointer-events:none;
}

table.prop-table {
  width:100%;
  margin-right:5rem;
  margin-left:0rem;
  /*margin-bottom: 40px;*/ /* Overlapping with topControls */
  font-size: 4vmin;
}

table.prop-table td {
  padding: 0 0.5rem 0 0;
  /*border:1px solid blue;*/
}

.slidercontainer {
  width: 100%;
  /*height:100%;*/ /* bad, we want keep same distance to bottom row. */

  /* We need to set position for .chapter_mark_svg.
   * Otherwise:
   *  1. width:100% of .chapter_mark_svg will ignore the padding-right of #controlBox.
   *  2. top:... of .chapter_mark_svg will use wrong anchor point.*/
  position:relative;
  top:0px;left:0px;
  height:100%;
  display:grid;
}

#test,
input[type="range"] {
  margin: 0px 0px; /* horizontales Margin >0 beeinflusst 100%-Breite von .chapter_mark_svg ?! */
  /*margin-bottom: -7px; /* Hm, only negative value removes this gap in FF?! */
  width:100%;
  height: 4vmin;

  box-sizing: border-box; /* Border respected by width. */
  border-radius: 6px;
  border: 3px solid var(--main-fg-color);

  overflow: hidden;
  cursor: pointer;

  -webkit-appearance: none;
}

/*input[type="range"]:not(.chapter_mark_svg) {
  background: var(--main-bg-color);
}*/
input[type="range"] {
  background-color: transparent;
}

::-webkit-slider-runnable-track {
  /*background-color: var(--main-bg-color);*/
  height: 4vmin;
}

::-webkit-slider-container {
  /*background-color: var(--main-bg-color);*/
}

/*
 * 1. Set to 0 width and remove border for a slider without a thumb
 */
::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 0; /* 1 */
  height: 40px;
  background-color: #fff;
  box-shadow: -100vw 0 0 100vw var(--main-fg-color);
  border: 0 solid #999; /* 1 */
}

::-moz-range-thumb {
  background-color: #fff;
  height: 40px;
  width: 0;
  border: 0 solid #999;
  border-radius: 0 !important;
  box-shadow: -100vw 0 0 100vw var(--main-fg-color);
  box-sizing: border-box;
}

::-moz-range-track {
  /*height: 4vmin; 2024, not required?!*/
  /*background-color: var(--main-bg-color);*/
}

::-ms-fill-lower {
  background-color: var(--main-fg-color);
}

::-ms-thumb {
  background-color: #fff;
  border: 2px solid #999;
  height: 40px;
  width: 20px;
  box-sizing: border-box;
}

::-ms-ticks-after {
  display: none;
}

::-ms-ticks-before {
  display: none;
}

::-ms-track {
  background-color: #ddd;
  color: transparent;
  height: 4vmin;
  border: none;
}

::-ms-tooltip {
  display: none;
}

.slider {
  /* class used in JS functions */
}
.sliderInfoContainer {
  /*width: 100%;*/
  text-align: center;
  font-size: 4vmin;
  /*margin-bottom: 20px;*/
  /*margin-top: 4vmin; /* Height of slider */

  pointer-events:none; /* Prevent overlapping of buttons */
}

.sliderCenter {
  margin: 0 auto;
  display: inline-block;
}

.sliderVolume {
  /*margin-bottom: 20px;*/
}

#overlay1, #overlay2 {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  z-index: 1000;
  position: fixed;
  visibility: hidden;
  /*text-align: center;*/
  background-color: rgba(0, 0, 0, 0.85);
}

.noscroll {
  overflow-y: hidden;
}

#playlist, #sharelist {
  overflow-y: scroll;
  overflow-x: hidden;
  /*position: absolute;*/
  max-height:80vh;
  /*position: relative;
  bottom: 1vh;
  left: 0px;
  right:0px;*/ /* Not needed/wrong in grid layout */
  padding-right:1em; /* for scrollbar in #playlist */


  width:min(90vw, 40em); /* Space nearby window border to close overlay, if possible. */

  margin-inline: auto;
  /* box-sizing: border-box;
  margin-inline: max(1rem, 50% - 40em/2); */ /*
  Disadvantage: Without 'auto' it blow out grid layout on slim screens.
  'Solution': Set fixed margin-inline on slim screens and use auto otherwise.
                                              */
}

#playlist {
  top:0vh;
  margin-bottom:1vh;

  grid-area: overlay_content;
}

.touchmenu,
#sharelist,
#playlist{
  /*scrollbar-color: var(--playlist-bg-active) var(--playlist-bg-hover);*/
  scrollbar-color: var(--playlist-bg-hover) transparent;
}

.playlistLoopButton {
  font-weight: bold;
}

.playlist-controls {
  font-size: 4vmin;
  padding-top:0.5vmin;
  margin-bottom: 2vmin;
  margin-top: 1vmin;
}

/* Grid layout sketch for overlay1/2:
 *   1 —2— 3 4 5
 *    (—6—)
 *  |   L   |
 *  |   I   |
 *  |   S   |
 *  |   T   |
 */
#overlay1 {
  display:grid;
  grid-template-columns:
  [Cleft]
  min(2vw, 2rem)
  [Ccontrols]
  1fr
  [Ccontrols]
  1fr
  1fr
  [Ccontrols]
  1fr
  [Ccontrols]
  1fr
  [Ccontrols]
  1fr
  [Ccontrols_end]
  min(2vw, 2rem)
  [Cright];

  grid-template-rows:
  [Rrow]
  minmax(2em, 1fr)
  [Rrow]
  minmax(2em, 1fr)
  1px
  [Rcontent]
  80vh
  [Rend]
  1rem;

  align-items:start;
  justify-items: stretch auto;
  grid-gap:1vw 1vw;
}

#overlay2 {
  display:grid;
  grid-template-columns:
  [Cleft]
  min(2vw, 2em)
  [Ccontrols]
  1fr
  [Ccontrols]
  1fr
  1fr
  [Ccontrols]
  1fr
  [Ccontrols]
  1fr
  [Ccontrols]
  1fr
  [Ccontrols_end]
  min(2vw, 2em)
  [Cright];

  grid-template-rows:
  [Rrow]
  minmax(2em, 1fr)
  1px
  [Rcontent]
  90vh
  [Rend]
  1rem;

  align-items:start;
  justify-items: stretch auto;
  grid-gap:1vw 1vw;

  /*padding-right: 2em;
  padding-left: 2em; */
}

.playlist-controls *{
  overflow:hidden; /* Prevents
  1. Right shift of buttons by too long texts in buttons
  2. Too high buttons do not match top-/baseline*/
}

.playlist-controls .position1 {
 grid-column:Ccontrols / span 1;
}
.playlist-controls .position2 {
 grid-column:Ccontrols 2 / span 2;
}
.playlist-controls .position3 {
 grid-column:Ccontrols 3/ span 1;
}
.playlist-controls .position4 {
 grid-column:Ccontrols 4/ span 1;
}
.playlist-controls .position5 {
 grid-column:Ccontrols 5/ span 1;
}

#playlistAdd{
  grid-column:Ccontrols 2 / span 3;
  /*grid-row:Rrow / span 1;*/
  grid-row:Rrow 2 / span 1;

  display:flex; /* input field with variable width + button */
  justify-content: center;
  align-items:center; /* Do not use stretch here. It streches
  the elements, but does not allow to center the text in the button.
  Instead we need to center here and using an inner flexbox for stretching*/

  height:100%;
}

#playlistAdd_input{
  flex: 1 1 auto;
  min-width: 4em; /* Without this in slim layouts the grid box  will overflow */
  height:100%;

  /*font-size: 3vmin;*/
  background-color: #66f;
  color: var(--main-fg-color);
  /*box-sizing: border-box; /* Border respected by width. */
  border-top-left-radius: 60px;
  border-bottom-left-radius: 60px;
  padding-left:1em; /* Avoid round border collision */
  text-align:center;

  border-color: var(--touchmenu-bg-blue);
  /*padding-top: 0.2em;
  padding-bottom: 0.1px;*/
  /*height:100%;*/
}
#playlistAdd_input:focus{
  outline: none;
  background-color:#333333;
}
#playlistAdd_input::placeholder{
  color: var(--main-bg-color);
}
#playlistAdd_input:focus::placeholder{
  color: transparent;
}
#playlistAdd_btn{
  width:4em;

  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.button_r {
  flex: 0 0 auto;

  text-align: center;
  box-sizing: border-box; /* Border respected by width. */
  border-bottom-right-radius: 60px;
  border-top-right-radius: 60px;
  color: var(--main-bg-color);
  cursor: pointer;
}

#playlist ,
#sharelist {
  grid-column-start:Cleft;
  grid-column-end:Cright;
  grid-row-start:Rcontent;
  grid-row-end:Rend;
}

table.playlist {
  width: 100%;
  table-layout: fixed;
  color: var(--main-bg-color);
  font-size: 4vmin;
  /*margin-left: auto;
  margin-right: auto;*/
  /*margin-right:20vmin;*/
  border-collapse: collapse;
  margin-bottom: 10px;
  font-weight: bold;
  cursor: pointer;
}

td.playlist.playing {
}

#playlist table:first-child td:nth-child(3){
  display:none;
}

td.playlist:first-child {
  border-bottom-left-radius: 6px;
  border-top-left-radius: 6px;
}

td.playlist:nth-child(2) {
  text-align: left;
  overflow-wrap: break-word;
  font-size: 4vmin;
  width: initial;
  cursor: auto;
}

td.playlist {
  /*height: 150px;*/
  padding-top:0.3em;
  padding-bottom:0.3em;
  text-align: center;
  font-size: 5.5vmin;
  font-weight: bold;
  width: 13%
}

td.playlist:last-child {
  border-bottom-right-radius: 6px;
  border-top-right-radius: 6px;
}

td.playlist.active, td.playlist:last-child:hover, td.playlist:nth-child(3):hover {
  filter: brightness(50%);
  /*background-color: var(--playlist-bg-hover);*/
}

td.playlist.click, td.playlist:last-child:active, td.playlist:nth-child(3):active {
  filter: brightness(30%);
}

td.playlist.playing:hover {
  filter: brightness(100%);
  /*background-color: var(--playlist-bg-hover);*/
}

#headerBox {
  position: absolute;
  top: 0px;
  left: 20px;
  right: 0rem;
  min-height:20%;
  height:30vmax;
}

#controlBox {
  position: absolute;
  /*top: 0px;*/
  left: 0px; /* Offset now realised by padding-left. This prevents cut of chapter_mark_svg overflow. Alternative: change overflow- */
  right: 0rem;
  bottom: 0px;
  max-height:80%;
  height:70vmax; /* Lässt bei schmalen Viewports oben mehr Platz */

  display: grid;
  grid-template-columns: [Cleft] repeat(5, 1fr) [Cmid] repeat(5, 1fr) [Cright];
  grid-template-rows:
  /*minmax(min-content, 5em) /* header row */
  [Ccycle]
  1fr   /* cycleControls */
  [CcycleEnd]
  20px  /* free space */
  [Ctop]
  minmax(min-content, 1fr) /* topControls */
  [CtopEnd]
  20px  /* free space */
  [Cmain1]
  1fr   /* leftControls1 rightControls1 */
  [Cmain1RightEnd]
  0fr   /* Avoids different button size in rightControls1 */
  [Cmain2]
  2fr   /* leftControls2 rightControls2 */
  2fr  /* |           | |            | */
  [Cend];
  /*justify-content:space-between;*/
  align-items:start;
  justify-items: stretch;
  grid-gap:0px 20px;

  /*overflow:hidden;*/
  overflow-x:hidden;
  overflow-y:auto;
  padding-right: 40px; /* scrollbar-space?! */
  padding-left: 20px;
}

#header {
  height:100%;

  /*align-self:start;*/
  /*overflow-y:hidden;*/

  margin-right: 3em;
}

#cycleControls {
  /* As subelement */
  grid-column-start:Cmid;
  grid-column-end:Cright;
  grid-row-start:Ccycle;
  grid-row-end:CcycleEnd;
  height:100%;
  width:100%;
  justify-self:end;

  grid-auto-rows:88%;
}

#topControls {
  grid-column-start:Cleft;
  grid-column-end:Cright;
  grid-row-start:Ctop;
  grid-row-end:CtopEnd;
  height:100%;

  /* Place content on bottom */
  display:grid;
  align-items:end;

  /* We need to set absolute position for .chapter_mark_svg.
   * Otherwise:
   *  1. width:100% of .chapter_mark_svg will ignore the padding-right of #controlBox.
   *  2. top:... of .chapter_mark_svg will use wrong anchor point.*/
  position:absolute;
  width:100%;
}

#leftControls1 {
  /* As subelement */
  grid-column-start:Cleft;
  grid-column-end:Cmid;
  grid-row-start:Cmain1;
  grid-row-end:Cmain2;
  height:100%;

  justify-content:space-between;
  /*align-items:end;*/
  justify-items: stretch;
  /*padding-top:20px;*/

  grid-auto-rows:44%;
}

#rightControls1 {
  /* As subelement */
  grid-column-start:Cmid;
  grid-column-end:Cright;
  grid-row-start:Cmain1;
  grid-row-end:Cmain1RightEnd;
  height:100%;

  align-items:start;
  justify-items: stretch;

  /* Others */
  grid-auto-rows:88%;
}
#leftControls2 {
  /* As subelement */
  grid-column-start:Cleft;
  grid-column-end:Cmid;
  grid-row-start:Cmain2;
  grid-row-end:Cend;
  height:100%;


  /* Others */
  grid-auto-rows:22%;
}

/* shared props from #[name]Controls */
.button_grid {
  display:grid;
  grid-template-columns: /* 18 = 3*3*2 */
  [Bleft]
  repeat(6, 1fr)
  [Bmid]
  1fr 0.5fr [Binfo] 1.5fr [Bcenter] 1.5fr [BinfoEnd] 0.5fr 1fr
  [BmidEnd]
  repeat(6, 1fr)
  [Bright];
  /*grid-template-rows: 1fr 1fr 1fr 1fr repeat(0, 1fr);*/
  /*grid-auto-rows:120px;*/
  justify-content:space-between;
}

#rightControls2 {
  /* As subelement */
  grid-column-start:Cmid;
  grid-column-end:Cright;
  grid-row-start:Cmain2;
  grid-row-end:Cend;
  height:100%;


  align-items:start;
  /*justify-items: stretch;*/

  /*? */
  grid-auto-rows:22%;
}

#leftControls1, #rightControls1 {
  grid-gap:6% 0px;
}
#leftControls2, #rightControls2 {
  grid-gap:3% 0px;
}

#volSliderControl {
}

.controls {
}
.control_full {
  grid-column: Bleft / span 18;
}
.control_left {
  margin-right:10px;
  grid-column: Bleft / span 9;
}
.control_right {
  margin-left:10px;
  grid-column: Bcenter / span 9;
}
.control_mid {
  grid-column: Bmid / span 6;
}
.control_info {
  grid-column: Binfo / span 2;
  text-align: center;
  font-size:50%;
  width:100%;
  margin:auto 0px;
}

/* Adapt sizes of left/right buttons */
.control_left.with_mid {
  grid-column: Bleft / span 6;
}
.control_right.with_mid {
  grid-column: BmidEnd / span 6;
}
.control_left.with_info {
  grid-column: Bleft / span 8;
}
.control_right.with_info {
  grid-column: BinfoEnd / span 8;
}

.button {
  height: 100%;
  /*padding-top:30%;*/
  /*max-height: 2.8em;*/

  /* Vertical allign over flexbox properties */
  display: flex;
  justify-content: center;
  align-items: center;

  text-align: center;
  box-sizing: border-box; /* Border respected by width. */
  border-radius: 60px;
  color: var(--main-bg-color);
  cursor: pointer;
  /*font-size: 150px;*/
}

#share_selector {
  height:100%;
  font-size: 3vmin; /* smaler than playlist button font to prevent clip of text, but got same button height. */
  background-color: var(--main-bg-color);
  color: var(--main-fg-color);
  box-sizing: border-box; /* Border respected by width. */
  border-radius: 60px;
  /*padding-left:1em; /* Avoid round border collision */
  text-align:center;
}

/*#share_selector ,
text-transform: capitalize;
}*/

  ul#sharelist {
    list-style-type: none; /* Remove bullets */
    padding: 0px;
    /*vertical-align:top;*/
  }

  #sharelist li {
    display: flex;

    border-radius: 6px;
    /*border: 3px solid #999;*/
    color: var(--main-bg-color);
    margin-bottom:0.5em;
    margin-right: 20px;

    min-height:2.5em;

    border-collapse: collapse;
  }

  #sharelist li * { /* same height of all elements in <li> */
    padding-top:.5em;
    padding-bottom:.3em;
    vertical-align: middle;
  }

  #sharelist li.dir_up:first-child { /* ".." do not scrolls off screen */
    position: sticky;
    top: 0px;
  }


  #sharelist li *.share_file,
  #sharelist li *.share_dir { /* title */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    /*margin-right:auto;*/ /* not required with flex-property */
    flex: 1 1 auto;
    text-align: left;

    font-weight: bold;
  }

  #sharelist li *.share_bullet,
  #sharelist li *.share_dir,
  #sharelist li *.share_file {
    cursor: pointer;
  }

  /*#sharelist li *:nth-child(3) { /* action button */
  #sharelist li *.share_action { /* action button */
    cursor: pointer;
    text-align: center;
    /*display:inline-block;*/
    /*width: 4em;*/ /* not respected due above flex-prop */
    flex-basis: 4em;
    flex-grow: 0;
    flex-shrink: 0;
  }

  #sharelist li *.share_action:hover,
  #sharelist li *.share_dir:hover,
  #sharelist li *.share_file:hover { /* action button */
    border-radius: 6px;
    background-color: var(--playlist-bg-active);
  }

  ul#sharelist li i.share_bullet_dotdot,
  ul#sharelist li i.share_bullet {
    margin-right: 0.6em;
    /*display:inline-block;*/
    text-align:right;

    /*width:2em;*/
    flex-basis: 2em;
    flex-grow: 0;
    flex-shrink: 0;
  }

  /* Long chapter titles can vertially be cut by overflow:hidden
   * Using this, class the text will be not drawn after N lines */
  .truncate-text-multiline2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .truncate-text-multiline3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }



  #debug {
    display:none;
    position:absolute;
    left:0px;
    bottom:0px;
    font-weight:bold;
    z-index:1001;

    width:30rem;
    background-color:rgba(255, 0, 0, 0.5);
  }

  /* Touchmenu */
  .touchmenu {
    /*top: 0; left: 0; right: 0; bottom: 0;*/
    /* Do not set here top,left,right,bottom values because
     * javascript's removeProperty won't work as expected */
  /*position: absolute; display:none; Set by JS*/

  max-height:38vh;
  /*margin-top: 3vh; margin-bottom: 3vh; /* distance to invoker button */
  border: 0.3em solid var(--main-bg-color);
  background-color: var(--main-bg-color);
  /*margin-bottom:0.5em;*/
  /*border-collapse: collapse; /* ?! */

  border-radius:1em;

  overflow-x:hidden;
  overflow-y:auto;
}

.touchmenu ol ,
.touchmenu ul {
  display:flex;
  /* flex-direction can be adapted by JS */
  padding:0px;
  margin:0px;

  /*padding-top:1em; padding-bottom:1em;*/ /* For border-radius */
  border-radius:1em;

  user-select:none; /* Without this click events are triggered
                     * even if mouse moved away after mousedown */

  background-color: var(--touchmenu-bg);
}

.touchmenu li {
  flex: 2em; /* difficult to vertical center */
  flex: 1;
  list-style-type: none; /* Remove bullets */
  cursor: pointer;
  margin:0px;
  padding:0.3em;

  overflow:hidden;
  white-space:nowrap; /* single line */
  /*border: 1px solid red;*/

  font-size:60%; /* Unclear reference?! */
}

.touchmenu li:hover {
  background-color: var(--playlist-bg-hover);
}

.touchmenu-entry span.index {
  min-width:2.4em;
  display:inline-block;
}
/* Touchmenu END */

/* Slider chapter marks */
.chapter_mark_svg {
  position:absolute;
  left:-5%; /* -5% are 50px in SVG */
  right:-5%;
  top:-2vmin;
  height:8vmin;
  z-index:-1;

  /*background-color: var(--main-bg-color);*/

  /* Notes:
   * • Style defined in symbol 'mark' and then references later with multiple positions.
   * • Escape '#' with '%23' (ocours e.g. in id names)!
   * • Setting svg height to auto allows automatic scaling on width of the slider without
   *   keeping the aspect ratio but filling the correct height.
   *   You has to set 'background-size:cover;' too.
   • 'px' in viewBox width of 'mark' is required. Otherwise FF offsets the element.
   • The marking line has a fixed thinkness (does not scale).
   */
  background-repeat:no-repeat;
  background-position:0 0;
  background-size:cover; /* cover: Scaling in both dimensions, but not 'shortest. */

  /* The url()-arg needs to be updated by JS at runtime.
   *
   * Insert an <use xlink:href="%23mark" x="{VAL}" /> tag for each mark.
   * Note that a predefined svg given by data: will be ignored unless
   the Content-Security-Policy for 'img-src includes 'data:'.
   We just need an update by JS and probably do not need to open this security hole?!
   * */
  background-image: url('chapter_mark.template.svg');
  background-image: none;
}

/*.chapter_mark_svg > input[type="range"]::-moz-range-track,
.chapter_mark_svg > input[type="range"]::-webkit-slider-runnable-track,
input[type="range"].chapter_mark_svg::-moz-range-track,
input[type="range"].chapter_mark_svg::-webkit-slider-runnable-track
{
}*/

  /* Slider chapter marks END */

  /* Smartphones and tablets with middle resolution/high dpi ?!*/
  /* Slim design with controls in one column. */
  @media all and (max-width: 35em) {

    #controlBox
    {
      grid-template-columns: [Cleft] repeat(5, 1fr) [Cright];

      grid-template-rows:
      /*minmax(min-content, 5em) /* header row */
      [Ccycle]
      1fr   /* cycleControls */
      [CcycleEnd]
      20px  /* free space */
      [Ctop]
      minmax(min-content, 1.5fr) /* topControls */
      [CtopEnd]
      20px  /* free space */
      [Cmain1]
      minmax(min-content, 1.5fr) /* leftControls1 */
      [Cmain2]
      3fr   /* leftControls2 */
      [Cmain3]
      1fr  /* rightControls1 */
      [Cmain4]
      3fr  /* rightControls2 */
      [Cend];
      /*justify-content:space-between;*/
      align-items:start;
      justify-items: stretch;
      grid-gap:0px 20px;

      /*overflow:hidden;*/
      overflow-x:hidden;
      overflow-y:auto;
      padding-right: 40px; /* scrollbar-space?! */

    }

    #cycleControls{
      grid-column-start:Cleft;
      grid-column-end:Cright;
      grid-row-start:Ccycle;
      grid-row-end:Ccycle;
    }

    #topControls {
      grid-column-start:Cleft;
      grid-column-end:Cright;
      grid-row-start:Ctop;
      grid-row-end:CtopEnd;
    }

    #leftControls1 {
      grid-column-start:Cleft;
      grid-column-end:Cright;
      grid-row-start:Cmain1;
      grid-row-end:Cmain2;
    }
    #leftControls2 {
      grid-column-start:Cleft;
      grid-column-end:Cright;
      grid-row-start:Cmain2;
      grid-row-end:Cmain3;

      /*margin-bottom: 20px; */
      /*height: 13em;*/
      grid-auto-rows:30%;
    }

    #rightControls1 {
      grid-column-start:Cleft;
      grid-column-end:Cright;
      grid-row-start:Cmain3;
      grid-row-end:Cmain4;

      /*grid-auto-rows:44%;*/
    }

    #rightControls2 {
      grid-column-start:Cleft;
      grid-column-end:Cright;
      grid-row-start:Cmain4;
      grid-row-end:Cend;

      grid-auto-rows:30%;
    }

    #playlistAdd, #share_selector, /* This elements, too, to guarantee same height as .button-Elements in overlay1 */
    .button {
      max-height:6vh;
    }

    #controlBox {
      font-size:60%;
    }

    .button .text-content {
      /*font-size:90%; /* *60% */
    }
    .button .icon-content {
      font-size: 5vh;
      /*padding-top:0.1em;*/
      padding-bottom:0.1em;
    }

    .truncate-text-multiline3 {
      display: -webkit-box;
      -webkit-line-clamp: 5;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    /*#debug::after {
    color:navy;
    content: "slim"
    }*/

  #playlistAdd{
    grid-column:Ccontrols 2 / span 4;
    /*grid-row:Rrow / span 1;*/
    grid-row:Rrow 2 / span 1;
  }

  #playlist, #sharelist {
    /* Give finger enough space to close overlay on borders */
    box-sizing: border-box;
    margin-left:min(10vw, 2rem);
    /*margin-right:max(1vw, 0.5rem);*/
  }


  #playlist::-webkit-scrollbar {
    display: none;
  }
} /* end of @media  */

/* Design for wide screens */
/*@media all and (min-width: 80em) */
@media all and (min-width: 50rem) and (min-width: 150vh)
{
  #headerBox {
    min-height:15%;
    height:20vmax;
  }
  table.prop-table {
    max-width:50%;
  }

  #controlBox
  {
    max-width:80em;  /* Using 'width' would produce jump during layout transition */
    margin-left:auto;
    margin-right:auto;
  }

  #cycleControls {
    width:50%;
    justify-self:end;
  }

  .button .content, .button .content i, .icon-content i {
    /*font-size: min(4.5vw, 4em);*/ /* Macht Ärger in Volume-Zeile und führt zu ungleichmäßig hohen Buttons.*/
  }


  /* Buttons on right side in overlays
   * | L |   1 5
   * | I |   —2—
   * | S |   3 4
   * | T |  (—6—)
   */
  #overlay1 ,
  #overlay2 {
    display:grid;
    grid-template-columns:
    [Cleft]
    62vw
    [Cright]
    2em
    repeat(6, [Ccontrols] 1fr)
    [Ccontrols_end]
    2em;

    grid-template-rows:
    [Rcontent]
    repeat(4, [Rrow] minmax(2em, 8vh))
    auto
    [Rend]
    1rem;

    align-items:start;
    justify-items: stretch auto;
    grid-gap:1vw 1vw;

    /*padding-right: 2em;
    padding-left: 2em; */
}

.playlist-controls .position1 {
  grid-column:Ccontrols 1 / span 3;
  grid-row:Rrow 1 / span 1;
}
.playlist-controls .position2 {
  grid-column:Ccontrols 1 / span 6;
  grid-row:Rrow 2 / span 1;
}
.playlist-controls .position3 {
  grid-column:Ccontrols 1/ span 3;
  grid-row:Rrow 3 / span 1;
}
.playlist-controls .position4 {
  grid-column:Ccontrols 4/ span 3;
  grid-row:Rrow 3 / span 1;
}
.playlist-controls .position5 {
  grid-column:Ccontrols 4/ span 3;
  grid-row:Rrow 1 / span 1;
}

#playlistAdd{
  grid-column:Ccontrols 1 / span 6;
  grid-row:Rrow 4 / span 1;
}

#playlist ,
#sharelist {
  margin-top:1rem;
  margin-bottom:1rem;
  padding-left:2rem; /* Margin is auto for centering */
  /*min-height:80vh;*/
  max-width:62vw;
  max-width:100%;
}

table.playlist {
  font-size: 3vmin; /* Ändert nix?! */
}

/*#debug::before {
color:navy;
content: "wide"
}*/
} /* end of @media  */

/* For debugging */
@media all and (max-width: 0em) {
  #header {
    background-color:darkblue;
  }
  #controlBox {
    background-color:rgba(200,40,40,0.3);
  }
  #cycleControls {
    background-color:red;
  }
  #topControls {
    background-color:rgba(130,130,130, 0.3);
  }
  #leftControls1, #leftControls2 {
    background-color:rgba(0,0,200, 0.3);
  }
  #rightControls1, #rightControls2 {
    background-color:#004400;
  }
  .slidercontainer {
    background-color:#333355;
    border:1px solid black;
  }

  #controlBox > div {
    border: 1px solid red;
  }

  .button .content{
    background-color:green;
  }

  .icon-content {
    background-color:navy;
  }

  /*#debug::after {
  color:navy;
  content: "debug"
  }*/
} /* end of @media  */
